import { PropType, ConcreteComponent } from 'vue';
import { SfListItemSize } from '../../index.ts';

export declare const sizeClasses: {
    sm: string;
    base: string;
    lg: string;
};
declare const _default: __VLS_WithTemplateSlots<import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    size: {
        type: PropType<`${SfListItemSize}`>;
        default: SfListItemSize;
    };
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<string | ConcreteComponent>;
        default: undefined;
    };
    childrenTag: {
        type: StringConstructor;
        default: string;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    size: {
        type: PropType<`${SfListItemSize}`>;
        default: SfListItemSize;
    };
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<string | ConcreteComponent>;
        default: undefined;
    };
    childrenTag: {
        type: StringConstructor;
        default: string;
    };
}>> & Readonly<{}>, {
    size: "base" | "sm" | "lg";
    disabled: boolean;
    tag: string | ConcreteComponent;
    selected: boolean;
    childrenTag: string;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>, {
    prefix?(_: {}): any;
    default?(_: {}): any;
    suffix?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=SfListItem.vue.d.ts.map