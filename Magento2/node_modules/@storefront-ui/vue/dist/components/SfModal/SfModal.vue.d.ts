import { PropType, ConcreteComponent } from 'vue';

declare function __VLS_template(): {
    default?(_: {}): any;
};
declare const __VLS_component: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<string | ConcreteComponent>;
        default: string;
    };
    disableClickAway: {
        type: BooleanConstructor;
        default: boolean;
    };
    disableEsc: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "update:modelValue": (isOpen: boolean) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: PropType<string | ConcreteComponent>;
        default: string;
    };
    disableClickAway: {
        type: BooleanConstructor;
        default: boolean;
    };
    disableEsc: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{
    "onUpdate:modelValue"?: ((isOpen: boolean) => any) | undefined;
}>, {
    tag: string | ConcreteComponent;
    modelValue: boolean;
    disableClickAway: boolean;
    disableEsc: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=SfModal.vue.d.ts.map